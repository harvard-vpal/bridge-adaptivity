# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-08 15:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bridge_lti', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('difficulty', models.FloatField(blank=True, null=True, verbose_name=b'max_points')),
                ('points', models.FloatField(blank=True, null=True)),
                ('launch_url', models.URLField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('metadata', models.CharField(blank=True, max_length=255, null=True)),
                ('strict_forward', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('log_type', models.CharField(choices=[(b'O', b'Opened'), (b'S', b'Submitted')], max_length=32)),
                ('answer', models.BooleanField(default=False, verbose_name=b'Is answer correct?')),
                ('attempt', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('total_points', models.FloatField(blank=True, null=True)),
                ('collection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='module.Collection')),
                ('lti_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bridge_lti.LtiUser')),
            ],
        ),
        migrations.CreateModel(
            name='SequenceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='module.Activity')),
                ('sequence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='module.Sequence')),
            ],
            options={
                'verbose_name': 'Sequence Item',
                'verbose_name_plural': 'Sequence Items',
            },
        ),
        migrations.AddField(
            model_name='log',
            name='sequence_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='module.SequenceItem'),
        ),
        migrations.AddField(
            model_name='activity',
            name='collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='module.Collection'),
        ),
        migrations.AlterUniqueTogether(
            name='collection',
            unique_together=set([('owner', 'name')]),
        ),
    ]
